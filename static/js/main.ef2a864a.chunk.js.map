{"version":3,"sources":["features/Display/index.js","features/Stepper/index.js","App.js","index.js"],"names":["Display","value","className","Stepper","increment","decrement","onStepperChange","onClick","size","MinusOutlined","min","max","defaultValue","onChange","PlusOutlined","App","state","currentNumber","currentStepper","increaseCurrentNumber","setState","decreaseCurrentNumber","handleStepperChange","data","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAWeA,EARC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,OACE,8BACE,oBAAIC,UAAU,UAAd,SAAyBD,O,8CC4BhBE,EA3BC,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBAQvC,OACE,sBAAKJ,UAAU,UAAf,UACE,cAAC,IAAD,CAAQK,QAASF,EAAWH,UAAU,iBAAiBM,KAAK,QAA5D,SACI,cAACC,EAAA,EAAD,MAEJ,cAAC,IAAD,CACEP,UAAS,yBAZE,SAACD,GAChB,OAAIA,EAAQ,GAAW,SACnBA,EAAQ,IAAY,WAAxB,KAWIS,IAAK,EACLC,IAAK,IACLC,aAAc,EACdC,SAAU,SAACZ,GAAD,OAAWK,EAAgBL,MAErC,cAAC,IAAD,CAAQM,QAASH,EAAWF,UAAU,iBAAiBM,KAAK,QAA5D,SACE,cAACM,EAAA,EAAD,UCiBKC,E,4MAtCbC,MAAM,CACJC,cAAe,EACfC,eAAgB,G,EAGlBC,sBAAwB,WACtB,EAAKC,UAAS,SAACJ,GACb,MAAO,CAAEC,cAAeD,EAAMC,cAAgBD,EAAME,oB,EAIxDG,sBAAwB,WACtB,EAAKD,UAAS,SAACJ,GACb,MAAO,CAAEC,cAAeD,EAAMC,cAAgBD,EAAME,oB,EAIxDI,oBAAsB,SAACC,GACrB,EAAKH,SAAS,CAAEF,eAAgBK,K,4CAGlC,WACE,OACE,gCACE,cAAC,EAAD,CACEtB,MAAOuB,KAAKR,MAAMC,gBAEpB,cAAC,EAAD,CACEhB,MAAOuB,KAAKR,MAAME,eAClBZ,gBAAiBkB,KAAKF,oBACtBlB,UAAWoB,KAAKL,sBAChBd,UAAWmB,KAAKH,+B,GAhCRI,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef2a864a.chunk.js","sourcesContent":["import React from 'react'\nimport './Display.scss'\n\nconst Display = ({ value }) => {\n  return (\n    <div>\n      <h1 className='display'>{value}</h1>\n    </div>\n  )\n}\n\nexport default Display","import React from 'react'\nimport './Stepper.scss'\nimport 'antd/dist/antd.css'\n\nimport { Button, InputNumber } from 'antd'\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons'\n\nconst Stepper = ({ increment, decrement, onStepperChange }) => {\n\n  const getColor = (value) => {\n    if (value > 10) return 'orange'\n    if (value > 100) return 'red'\n  }\n\n\n  return (\n    <div className='stepper'>\n      <Button onClick={decrement} className='stepper-button' size='large'>\n          <MinusOutlined />\n        </Button>\n      <InputNumber \n        className={`stepper-input ${getColor}`}\n        min={0} \n        max={100} \n        defaultValue={1}\n        onChange={(value) => onStepperChange(value)}\n      />\n        <Button onClick={increment} className='stepper-button' size='large'>\n          <PlusOutlined />\n        </Button>\n    </div>\n  )\n}\n\nexport default Stepper","import React, { Component } from 'react'\n\nimport Display from '../src/features/Display'\nimport Stepper from '../src/features/Stepper'\n\n\nclass App extends Component{\n  state={\n    currentNumber: 0,\n    currentStepper: 1\n  }\n\n  increaseCurrentNumber = () => {\n    this.setState((state) => {\n      return { currentNumber: state.currentNumber + state.currentStepper }\n    })\n  }\n\n  decreaseCurrentNumber = () => {\n    this.setState((state) => {\n      return { currentNumber: state.currentNumber - state.currentStepper }\n    })\n  }\n\n  handleStepperChange = (data) => {\n    this.setState({ currentStepper: data })\n  }\n\n  render() {\n    return (\n      <div>\n        <Display \n          value={this.state.currentNumber} \n        />\n        <Stepper \n          value={this.state.currentStepper}\n          onStepperChange={this.handleStepperChange}\n          increment={this.increaseCurrentNumber}\n          decrement={this.decreaseCurrentNumber}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}